name: Publish

on:
  workflow_call:

jobs:
  pre-publish-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: true

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: |
          cargo test --verbose -- --include-ignored
          cargo test --verbose --all-features -- --include-ignored

      - name: Run Clippy
        run: cargo clippy --all-targets
      - name: Run Format Check
        run: cargo fmt --check

  publish-crates:
    runs-on: ubuntu-latest
    needs: [pre-publish-test]
    environment: release
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
      - uses: rust-lang/crates-io-auth-action@e919bc7605cde86df457cf5b93c5e103838bd879 # v1.0.1
        id: auth
      - name: publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
        run: |
          publish_package () {
            VERSION=$(cargo metadata --no-deps --format-version=1 | jq -r ".packages[] | select(.name==\"$1\") | .version")
            VERSIONS=$(curl -s -XGET "https://crates.io/api/v1/crates/$1" | jq -r 'select(.versions != null) | .versions[].num')
            if echo "${VERSIONS}" | grep "${VERSION}" >/dev/null; then
              echo "$1 ${VERSION} has already been published"
            else
              sleep 15
              cargo publish -p "$1" --all-features
            fi
          }

          publish_package "jlabel"
          sleep 5
          publish_package "jlabel-question"
